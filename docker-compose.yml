version: "3.7"
services:
    app:
        build:
            args:
                user: user
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: notebook
        container_name: notebook-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - notebook

    db:
        image: arm64v8/mysql:8.0.30
        container_name: notebook-db
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_HOST=%
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_USER=${DB_USERNAME}
            - SERVICE_TAGS=dev
            - SERVICE_NAME=mysql
        volumes:
            - ./docker-compose/mysql:/docker-entrypoint-initdb.d
            - ~/notebook-mysql/data:/var/lib/mysql
            - ~/notebook-mysql/logs:/var/log/mysql
        networks:
            - notebook
        command:
            --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
            --default-storage-engine="InnoDB"
            --explicit-defaults-for-timestamp="ON"

    nginx:
        image: nginx:1.19
        container_name: notebook-nginx
        restart: unless-stopped
        ports:
            - "8000:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx/conf.d:/etc/nginx/conf.d
            - ./docker-compose/nginx/ssl:/etc/nginx/ssl
        networks:
            - notebook
